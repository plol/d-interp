state 0:
 Stmt ->  * semi {eof}
 Stmt ->  * Expr semi {eof}
 Stmt ->  * Declaration {eof}
 Stmt ->  * If {eof}
 Stmt ->  * While {eof}
 Stmt ->  * Foreach {eof}
 Stmt ->  * Return semi {eof}
 Stmt ->  * CurlStmtList {eof}
    AddExpr -> 1
    AndAndExpr -> 2
    AndExpr -> 3
    AssignExpr -> 4
    BasicType -> 5
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    CurlStmtList -> 10
    Decl -> 11
    Declaration -> 12
    EqualExpr -> 13
    Expr -> 14
    Foreach -> 15
    FunctionAttribute -> 16
    IdList -> 17
    IdentityExpr -> 18
    If -> 19
    InExpr -> 20
    LambdaType -> 21
    MethodAttribute -> 22
    MulExpr -> 23
    NewExpr -> 24
    OrExpr -> 25
    OrOrExpr -> 26
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    Return -> 33
    ShiftExpr -> 34
    StorageClass -> 35
    StorageClasses -> 36
    Type -> 37
    UnaryExpr -> 38
    While -> 39
    XorExpr -> 40
    abstract_ -> 41
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    cast_ -> 45
    char_ -> 46
    const_ -> 47
    dchar_ -> 48
    deprecated_ -> 49
    double_ -> 50
    enum_ -> 51
    extern_ -> 52
    false_ -> 53
    final_ -> 54
    float_ -> 55
    foreach_ -> 56
    if_ -> 57
    immutable_ -> 58
    inout_ -> 59
    int_ -> 60
    long_ -> 61
    new_ -> 62
    nothrow_ -> 63
    null_ -> 64
    override_ -> 65
    pure_ -> 66
    real_ -> 67
    return_ -> 68
    scope_ -> 69
    shared_ -> 70
    short_ -> 71
    static_ -> 72
    super_ -> 73
    synchronized_ -> 74
    this_ -> 75
    true_ -> 76
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    while_ -> 83
    t__FILE__ -> 84
    t__LINE__ -> 85
    t__gshared -> 86
    dot -> 87
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    lcurl -> 92
    semi -> 93
    dollar -> 94
    at -> 95
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 104
state 1:
 AddExpr -> AddExpr * add MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AddExpr -> AddExpr * sub MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CatExpr -> AddExpr * tilde MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> AddExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    sub -> 105
    add -> 106
    tilde -> 107
state 2:
 AndAndExpr -> AndAndExpr * andand OrExpr {rpar rbra question comma semi set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AndAndExpr -> AndAndExpr * andand CmpExpr {rpar rbra question comma semi set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 OrOrExpr -> AndAndExpr *  {rpar rbra question comma semi set oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    andand -> 108
state 3:
 XorExpr -> AndExpr *  {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 4:
 Expr -> AssignExpr *  {dotdot rpar comma semi colon}
state 5:
 Type -> BasicType *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 6:
 UnaryExpr -> CastExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 7:
 AddExpr -> CatExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 8:
 AndAndExpr -> CmpExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 9:
 AssignExpr -> CondExpr *  {dotdot rpar rbra comma semi colon}
 AssignExpr -> CondExpr * OpSet AssignExpr {dotdot rpar rbra comma semi colon}
    OpSet -> 109
    set -> 110
    div_set -> 111
    and_set -> 112
    or_set -> 113
    sub_set -> 114
    add_set -> 115
    ltlt_set -> 116
    gtgt_set -> 117
    gtgtgt_set -> 118
    star_set -> 119
    perc_set -> 120
    xor_set -> 121
    pow_set -> 122
    tilde_set -> 123
state 10:
 Stmt -> CurlStmtList *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 11:
 Declaration -> Decl *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 12:
 Stmt -> Declaration *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 13:
 CmpExpr -> EqualExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 14:
 Expr -> Expr * comma AssignExpr {comma semi}
 Stmt -> Expr * semi {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    comma -> 124
    semi -> 125
state 15:
 Stmt -> Foreach *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 16:
 MethodAttribute -> FunctionAttribute *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 17:
 IdList -> IdList * dot id {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
 Type -> IdList *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    dot -> 126
state 18:
 CmpExpr -> IdentityExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 19:
 Stmt -> If *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 20:
 CmpExpr -> InExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 21:
 Type -> LambdaType *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 22:
 StorageClass -> MethodAttribute *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 23:
 AddExpr -> MulExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * star UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * div UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * perc UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    star -> 127
    div -> 128
    perc -> 129
state 24:
 UnaryExpr -> NewExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 25:
 AndAndExpr -> OrExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 OrExpr -> OrExpr * or XorExpr {dotdot rpar rbra question comma semi colon set andand or oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    or -> 130
state 26:
 CondExpr -> OrOrExpr *  {dotdot rpar rbra comma semi colon set div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CondExpr -> OrOrExpr * question Expr colon CondExpr {dotdot rpar rbra comma semi colon set div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 OrOrExpr -> OrOrExpr * oror AndAndExpr {dotdot rpar rbra question comma semi colon set oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    question -> 131
    oror -> 132
state 27:
 PrimaryExpr -> ParExpr *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 28:
 PostfixExpr -> PostfixExpr * ArgList {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * Slice {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * Index {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * dot id {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * Postfix {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PowExpr -> PostfixExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PowExpr -> PostfixExpr * pow PowExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ArgList -> 133
    Index -> 134
    Postfix -> 135
    Slice -> 136
    dot -> 137
    subsub -> 138
    addadd -> 139
    lpar -> 140
    lbra -> 141
    pow -> 142
state 29:
 UnaryExpr -> PowExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 30:
 UnaryExpr -> Prefix * UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    CastExpr -> 6
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    UnaryExpr -> 143
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 31:
 PostfixExpr -> PrimaryExpr *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 32:
 CmpExpr -> RelExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 33:
 Stmt -> Return * semi {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    semi -> 146
state 34:
 AndExpr -> ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AndExpr -> ShiftExpr * and ShiftExpr {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CmpExpr -> ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 EqualExpr -> ShiftExpr * eq ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 EqualExpr -> ShiftExpr * bangeq ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 IdentityExpr -> ShiftExpr * is_ ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 IdentityExpr -> ShiftExpr * bangis ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 InExpr -> ShiftExpr * in_ ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 InExpr -> ShiftExpr * bangin ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 RelExpr -> ShiftExpr * RelOp ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgtgt AddExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * ltlt AddExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgt AddExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    RelOp -> 147
    in_ -> 148
    is_ -> 149
    bangis -> 150
    bangin -> 151
    and -> 152
    lt -> 153
    lteq -> 154
    ltlt -> 155
    ltgt -> 156
    ltgteq -> 157
    gt -> 158
    gteq -> 159
    gtgt -> 160
    gtgtgt -> 161
    bangeq -> 162
    bangltgt -> 163
    bangltgteq -> 164
    banglt -> 165
    banglteq -> 166
    banggt -> 167
    banggteq -> 168
    eq -> 169
state 35:
 StorageClasses -> StorageClass *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
 StorageClasses -> StorageClass *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 36:
 Decl -> StorageClasses * Decl {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 StorageClasses -> StorageClasses * StorageClass {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
    BasicType -> 5
    Decl -> 170
    FunctionAttribute -> 16
    IdList -> 171
    LambdaType -> 21
    MethodAttribute -> 22
    StorageClass -> 172
    StorageClasses -> 36
    Type -> 173
    abstract_ -> 41
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    char_ -> 46
    const_ -> 47
    dchar_ -> 48
    deprecated_ -> 49
    double_ -> 50
    enum_ -> 51
    extern_ -> 52
    final_ -> 54
    float_ -> 55
    immutable_ -> 58
    inout_ -> 59
    int_ -> 60
    long_ -> 61
    nothrow_ -> 63
    override_ -> 65
    pure_ -> 66
    real_ -> 67
    scope_ -> 69
    shared_ -> 70
    short_ -> 71
    static_ -> 72
    synchronized_ -> 74
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    t__gshared -> 86
    dot -> 174
    at -> 95
    id -> 175
state 37:
 Decl -> Type * id Parameters FunctionBody {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 Decl -> Type * id Parameters FunctionAttributes FunctionBody {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 Decl -> Type * ComVarInit semi {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ lbra star id}
 LambdaType -> Type * function_ Parameters {delegate_ function_ lbra star id}
 Type -> Type * TypeSuffix {delegate_ function_ lbra star id}
    ComVarInit -> 176
    TypeSuffix -> 177
    VarInit -> 178
    delegate_ -> 179
    function_ -> 180
    lbra -> 181
    star -> 182
    id -> 183
state 38:
 MulExpr -> UnaryExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 39:
 Stmt -> While *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 40:
 OrExpr -> XorExpr *  {dotdot rpar rbra question comma semi colon set andand or oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 XorExpr -> XorExpr * xor AndExpr {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    xor -> 184
state 41:
 StorageClass -> abstract_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 42:
 Type -> auto_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 43:
 BasicType -> bool_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 44:
 BasicType -> byte_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 45:
 CastExpr -> cast_ * lpar Type rpar UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CastExpr -> cast_ * lpar CastQual rpar UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CastExpr -> cast_ * lpar rpar UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    lpar -> 185
state 46:
 BasicType -> char_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 47:
 MethodAttribute -> const_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
 Type -> const_ * lpar Type rpar {delegate_ function_ lbra star id}
    lpar -> 186
state 48:
 BasicType -> dchar_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 49:
 StorageClass -> deprecated_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 50:
 BasicType -> double_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 51:
 StorageClass -> enum_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 52:
 StorageClass -> extern_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 53:
 PrimaryExpr -> false_ *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 54:
 StorageClass -> final_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 55:
 BasicType -> float_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 56:
 Foreach -> foreach_ * lpar ForeachTypeList semi Expr rpar Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 Foreach -> foreach_ * lpar ForeachTypeList semi Expr dotdot Expr rpar Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    lpar -> 187
state 57:
 If -> if_ * ParExpr CurlStmtList {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 If -> if_ * ParExpr CurlStmtList else_ CurlStmtList {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    ParExpr -> 188
    lpar -> 91
state 58:
 MethodAttribute -> immutable_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
 Type -> immutable_ * lpar Type rpar {delegate_ function_ lbra star id}
    lpar -> 189
state 59:
 MethodAttribute -> inout_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
 Type -> inout_ * lpar Type rpar {delegate_ function_ lbra star id}
    lpar -> 190
state 60:
 BasicType -> int_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 61:
 BasicType -> long_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 62:
 NewExpr -> new_ * Type {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 NewExpr -> new_ * Type ArgList {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    BasicType -> 5
    IdList -> 17
    LambdaType -> 21
    Type -> 191
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    char_ -> 46
    const_ -> 192
    dchar_ -> 48
    double_ -> 50
    float_ -> 55
    immutable_ -> 193
    inout_ -> 194
    int_ -> 60
    long_ -> 61
    real_ -> 67
    shared_ -> 195
    short_ -> 71
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    dot -> 174
    id -> 175
state 63:
 FunctionAttribute -> nothrow_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot lcurl at id}
state 64:
 PrimaryExpr -> null_ *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 65:
 StorageClass -> override_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 66:
 FunctionAttribute -> pure_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot lcurl at id}
state 67:
 BasicType -> real_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 68:
 Return -> return_ *  {semi}
 Return -> return_ * Expr {semi}
    AddExpr -> 1
    AndAndExpr -> 2
    AndExpr -> 3
    AssignExpr -> 4
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    EqualExpr -> 13
    Expr -> 196
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 197
    NewExpr -> 24
    OrExpr -> 198
    OrOrExpr -> 199
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 201
    UnaryExpr -> 38
    XorExpr -> 40
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 69:
 StorageClass -> scope_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 70:
 MethodAttribute -> shared_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
 Type -> shared_ * lpar Type rpar {delegate_ function_ lbra star id}
    lpar -> 202
state 71:
 BasicType -> short_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 72:
 StorageClass -> static_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 73:
 PrimaryExpr -> super_ *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 74:
 StorageClass -> synchronized_ *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 75:
 PrimaryExpr -> this_ *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 76:
 PrimaryExpr -> true_ *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 77:
 BasicType -> ubyte_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 78:
 BasicType -> uint_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 79:
 BasicType -> ulong_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 80:
 BasicType -> ushort_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 81:
 BasicType -> void_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 82:
 BasicType -> wchar_ *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 83:
 While -> while_ * ParExpr Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    ParExpr -> 203
    lpar -> 91
state 84:
 PrimaryExpr -> t__FILE__ *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 85:
 PrimaryExpr -> t__LINE__ *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 86:
 StorageClass -> t__gshared *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 87:
 PostfixExpr -> dot * NewExpr {in_ is_ dot subsub addadd lpar lbra rbra question comma semi set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PrimaryExpr -> dot * id {in_ is_ dot subsub addadd lpar lbra rbra question comma semi set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 Type -> dot * IdList {delegate_ function_ lbra rbra star id}
    IdList -> 204
    NewExpr -> 205
    new_ -> 62
    id -> 206
state 88:
 Prefix -> subsub *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 89:
 Prefix -> addadd *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 90:
 Prefix -> bang *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 91:
 ParExpr -> lpar * Expr rpar {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ in_ inout_ int_ is_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot dotdot subsub addadd bang lpar rpar lbra rbra lcurl question comma semi colon dollar set at bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set string_ char_lit num id}
    AddExpr -> 1
    AndAndExpr -> 207
    AndExpr -> 3
    AssignExpr -> 4
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    EqualExpr -> 13
    Expr -> 208
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 209
    NewExpr -> 24
    OrExpr -> 198
    OrOrExpr -> 199
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 34
    UnaryExpr -> 38
    XorExpr -> 210
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 92:
 CurlStmtList -> lcurl * StmtList rcurl {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ else_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 CurlStmtList -> lcurl * rcurl {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ else_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    AddExpr -> 1
    AndAndExpr -> 2
    AndExpr -> 3
    AssignExpr -> 4
    BasicType -> 5
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    CurlStmtList -> 10
    Decl -> 11
    Declaration -> 12
    EqualExpr -> 13
    Expr -> 14
    Foreach -> 15
    FunctionAttribute -> 16
    IdList -> 17
    IdentityExpr -> 18
    If -> 19
    InExpr -> 20
    LambdaType -> 21
    MethodAttribute -> 22
    MulExpr -> 23
    NewExpr -> 24
    OrExpr -> 25
    OrOrExpr -> 26
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    Return -> 33
    ShiftExpr -> 34
    Stmt -> 211
    StmtList -> 212
    StorageClass -> 213
    StorageClasses -> 214
    Type -> 37
    UnaryExpr -> 38
    While -> 39
    XorExpr -> 40
    abstract_ -> 41
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    cast_ -> 45
    char_ -> 46
    const_ -> 47
    dchar_ -> 48
    deprecated_ -> 49
    double_ -> 50
    enum_ -> 51
    extern_ -> 52
    false_ -> 53
    final_ -> 54
    float_ -> 55
    foreach_ -> 56
    if_ -> 57
    immutable_ -> 58
    inout_ -> 59
    int_ -> 60
    long_ -> 61
    new_ -> 62
    nothrow_ -> 63
    null_ -> 64
    override_ -> 65
    pure_ -> 66
    real_ -> 67
    return_ -> 68
    scope_ -> 69
    shared_ -> 70
    short_ -> 71
    static_ -> 72
    super_ -> 73
    synchronized_ -> 74
    this_ -> 75
    true_ -> 76
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    while_ -> 83
    t__FILE__ -> 84
    t__LINE__ -> 85
    t__gshared -> 86
    dot -> 87
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    lcurl -> 92
    rcurl -> 215
    semi -> 93
    dollar -> 94
    at -> 95
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 104
state 93:
 Stmt -> semi *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 94:
 PrimaryExpr -> dollar *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 95:
 FunctionAttribute -> at * id {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot lcurl at id}
    id -> 216
state 96:
 Prefix -> and *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 97:
 Prefix -> sub *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 98:
 Prefix -> add *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 99:
 Prefix -> star *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 100:
 Prefix -> tilde *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 101:
 PrimaryExpr -> string_ *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 102:
 PrimaryExpr -> char_lit *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 103:
 PrimaryExpr -> num *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 104:
 IdList -> id *  {delegate_ function_ dot lbra rbra star id}
 PrimaryExpr -> id *  {in_ is_ dot subsub addadd lpar lbra rbra question comma semi set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 105:
 AddExpr -> AddExpr sub * MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    CastExpr -> 6
    MulExpr -> 217
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 106:
 AddExpr -> AddExpr add * MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    CastExpr -> 6
    MulExpr -> 218
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 107:
 CatExpr -> AddExpr tilde * MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    CastExpr -> 6
    MulExpr -> 219
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 108:
 AndAndExpr -> AndAndExpr andand * OrExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AndAndExpr -> AndAndExpr andand * CmpExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    AndExpr -> 3
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 220
    EqualExpr -> 13
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 197
    NewExpr -> 24
    OrExpr -> 221
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 34
    UnaryExpr -> 38
    XorExpr -> 40
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 109:
 AssignExpr -> CondExpr OpSet * AssignExpr {dotdot rpar rbra comma semi colon}
    AddExpr -> 1
    AndAndExpr -> 207
    AndExpr -> 3
    AssignExpr -> 222
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    EqualExpr -> 13
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 23
    NewExpr -> 24
    OrExpr -> 198
    OrOrExpr -> 26
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 34
    UnaryExpr -> 38
    XorExpr -> 40
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 110:
 OpSet -> set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 111:
 OpSet -> div_set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 112:
 OpSet -> and_set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 113:
 OpSet -> or_set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 114:
 OpSet -> sub_set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 115:
 OpSet -> add_set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 116:
 OpSet -> ltlt_set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 117:
 OpSet -> gtgt_set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 118:
 OpSet -> gtgtgt_set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 119:
 OpSet -> star_set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 120:
 OpSet -> perc_set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 121:
 OpSet -> xor_set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 122:
 OpSet -> pow_set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 123:
 OpSet -> tilde_set *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 124:
 Expr -> Expr comma * AssignExpr {dotdot rpar comma semi colon}
    AddExpr -> 1
    AndAndExpr -> 207
    AndExpr -> 3
    AssignExpr -> 223
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    EqualExpr -> 13
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 197
    NewExpr -> 24
    OrExpr -> 198
    OrOrExpr -> 26
    ParExpr -> 27
    PostfixExpr -> 224
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 34
    UnaryExpr -> 38
    XorExpr -> 40
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 125:
 Stmt -> Expr semi *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 126:
 IdList -> IdList dot * id {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    id -> 225
state 127:
 MulExpr -> MulExpr star * UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    CastExpr -> 6
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    UnaryExpr -> 226
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 128:
 MulExpr -> MulExpr div * UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    CastExpr -> 6
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    UnaryExpr -> 227
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 129:
 MulExpr -> MulExpr perc * UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    CastExpr -> 6
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    UnaryExpr -> 228
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 130:
 OrExpr -> OrExpr or * XorExpr {dotdot rpar rbra question comma semi colon set andand or oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    AndExpr -> 3
    CastExpr -> 6
    CatExpr -> 7
    MulExpr -> 197
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    ShiftExpr -> 229
    UnaryExpr -> 38
    XorExpr -> 230
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 131:
 CondExpr -> OrOrExpr question * Expr colon CondExpr {dotdot rpar rbra comma semi colon set div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    AndAndExpr -> 207
    AndExpr -> 3
    AssignExpr -> 4
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    EqualExpr -> 13
    Expr -> 231
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 23
    NewExpr -> 24
    OrExpr -> 25
    OrOrExpr -> 232
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 233
    UnaryExpr -> 38
    XorExpr -> 210
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 132:
 OrOrExpr -> OrOrExpr oror * AndAndExpr {dotdot rpar rbra question comma semi colon set oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    AndAndExpr -> 234
    AndExpr -> 3
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    EqualExpr -> 13
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 209
    NewExpr -> 24
    OrExpr -> 198
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 201
    UnaryExpr -> 38
    XorExpr -> 40
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 133:
 PostfixExpr -> PostfixExpr ArgList *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 134:
 PostfixExpr -> PostfixExpr Index *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 135:
 PostfixExpr -> PostfixExpr Postfix *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 136:
 PostfixExpr -> PostfixExpr Slice *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 137:
 PostfixExpr -> PostfixExpr dot * id {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    id -> 235
state 138:
 Postfix -> subsub *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 139:
 Postfix -> addadd *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 140:
 ArgList -> lpar * ComExprList rpar {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ArgList -> lpar * rpar {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    AndAndExpr -> 2
    AndExpr -> 3
    AssignExpr -> 236
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    ComExprList -> 237
    CondExpr -> 9
    EqualExpr -> 13
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 23
    NewExpr -> 24
    OrExpr -> 25
    OrOrExpr -> 26
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 201
    UnaryExpr -> 38
    XorExpr -> 210
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    rpar -> 238
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 141:
 Index -> lbra * ComExprList rbra {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 Slice -> lbra * AssignExpr dotdot AssignExpr rbra {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 Slice -> lbra * rbra {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    AndAndExpr -> 207
    AndExpr -> 3
    AssignExpr -> 239
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    ComExprList -> 240
    CondExpr -> 9
    EqualExpr -> 13
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 23
    NewExpr -> 24
    OrExpr -> 198
    OrOrExpr -> 199
    ParExpr -> 27
    PostfixExpr -> 241
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 201
    UnaryExpr -> 38
    XorExpr -> 40
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    rbra -> 242
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 142:
 PowExpr -> PostfixExpr pow * PowExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 243
    PrimaryExpr -> 31
    false_ -> 53
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    lpar -> 91
    dollar -> 94
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 143:
 UnaryExpr -> Prefix UnaryExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 144:
 PostfixExpr -> dot * NewExpr {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PrimaryExpr -> dot * id {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    NewExpr -> 205
    new_ -> 62
    id -> 244
state 145:
 PrimaryExpr -> id *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 146:
 Stmt -> Return semi *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 147:
 RelExpr -> ShiftExpr RelOp * ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    CastExpr -> 6
    CatExpr -> 7
    MulExpr -> 23
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    ShiftExpr -> 245
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 148:
 InExpr -> ShiftExpr in_ * ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    CastExpr -> 6
    CatExpr -> 7
    MulExpr -> 23
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    ShiftExpr -> 246
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 149:
 IdentityExpr -> ShiftExpr is_ * ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    CastExpr -> 6
    CatExpr -> 7
    MulExpr -> 23
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    ShiftExpr -> 247
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 150:
 IdentityExpr -> ShiftExpr bangis * ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    CastExpr -> 6
    CatExpr -> 7
    MulExpr -> 23
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    ShiftExpr -> 248
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 151:
 InExpr -> ShiftExpr bangin * ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    CastExpr -> 6
    CatExpr -> 7
    MulExpr -> 23
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    ShiftExpr -> 249
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 152:
 AndExpr -> ShiftExpr and * ShiftExpr {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    CastExpr -> 6
    CatExpr -> 7
    MulExpr -> 23
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    ShiftExpr -> 250
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 153:
 RelOp -> lt *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 154:
 RelOp -> lteq *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 155:
 ShiftExpr -> ShiftExpr ltlt * AddExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 251
    CastExpr -> 6
    CatExpr -> 7
    MulExpr -> 23
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 156:
 RelOp -> ltgt *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 157:
 RelOp -> ltgteq *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 158:
 RelOp -> gt *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 159:
 RelOp -> gteq *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 160:
 ShiftExpr -> ShiftExpr gtgt * AddExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 252
    CastExpr -> 6
    CatExpr -> 7
    MulExpr -> 23
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 161:
 ShiftExpr -> ShiftExpr gtgtgt * AddExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 253
    CastExpr -> 6
    CatExpr -> 7
    MulExpr -> 23
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 162:
 EqualExpr -> ShiftExpr bangeq * ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    CastExpr -> 6
    CatExpr -> 7
    MulExpr -> 23
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    ShiftExpr -> 254
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 163:
 RelOp -> bangltgt *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 164:
 RelOp -> bangltgteq *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 165:
 RelOp -> banglt *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 166:
 RelOp -> banglteq *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 167:
 RelOp -> banggt *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 168:
 RelOp -> banggteq *  {cast_ false_ new_ null_ super_ this_ true_ t__FILE__ t__LINE__ dot subsub addadd bang lpar dollar and sub add star tilde string_ char_lit num id}
state 169:
 EqualExpr -> ShiftExpr eq * ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    CastExpr -> 6
    CatExpr -> 7
    MulExpr -> 23
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    ShiftExpr -> 255
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 170:
 Decl -> StorageClasses Decl *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 171:
 IdList -> IdList * dot id {delegate_ function_ dot rpar lbra rbra comma star id}
 Type -> IdList *  {delegate_ function_ rpar lbra rbra comma star id}
    dot -> 126
state 172:
 StorageClasses -> StorageClass *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
 StorageClasses -> StorageClass *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
 StorageClasses -> StorageClasses StorageClass *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 173:
 Decl -> Type * id Parameters FunctionBody {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 Decl -> Type * id Parameters FunctionAttributes FunctionBody {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 Decl -> Type * ComVarInit semi {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ lbra star id}
 LambdaType -> Type * function_ Parameters {delegate_ function_ lbra star id}
 Type -> Type * TypeSuffix {delegate_ function_ lbra star id}
    ComVarInit -> 176
    TypeSuffix -> 177
    VarInit -> 178
    delegate_ -> 179
    function_ -> 180
    lbra -> 181
    star -> 182
    id -> 183
state 174:
 Type -> dot * IdList {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    IdList -> 204
    id -> 175
state 175:
 IdList -> id *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 176:
 ComVarInit -> ComVarInit * comma VarInit {comma semi}
 Decl -> Type ComVarInit * semi {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    comma -> 256
    semi -> 257
state 177:
 Type -> Type TypeSuffix *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 178:
 ComVarInit -> VarInit *  {comma semi}
state 179:
 LambdaType -> Type delegate_ * Parameters {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    Parameters -> 258
    lpar -> 259
state 180:
 LambdaType -> Type function_ * Parameters {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    Parameters -> 260
    lpar -> 259
state 181:
 TypeSuffix -> lbra * Type rbra {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
 TypeSuffix -> lbra * AssignExpr rbra {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
 TypeSuffix -> lbra * rbra {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    AddExpr -> 261
    AndAndExpr -> 2
    AndExpr -> 3
    AssignExpr -> 262
    BasicType -> 5
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    EqualExpr -> 13
    IdList -> 171
    IdentityExpr -> 18
    InExpr -> 20
    LambdaType -> 21
    MulExpr -> 197
    NewExpr -> 24
    OrExpr -> 25
    OrOrExpr -> 199
    ParExpr -> 27
    PostfixExpr -> 224
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 233
    Type -> 263
    UnaryExpr -> 38
    XorExpr -> 40
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    cast_ -> 45
    char_ -> 46
    const_ -> 192
    dchar_ -> 48
    double_ -> 50
    false_ -> 53
    float_ -> 55
    immutable_ -> 193
    inout_ -> 194
    int_ -> 60
    long_ -> 61
    new_ -> 62
    null_ -> 64
    real_ -> 67
    shared_ -> 195
    short_ -> 71
    super_ -> 73
    this_ -> 75
    true_ -> 76
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 87
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    rbra -> 264
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 104
state 182:
 TypeSuffix -> star *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 183:
 Decl -> Type id * Parameters FunctionBody {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 Decl -> Type id * Parameters FunctionAttributes FunctionBody {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 VarInit -> id *  {comma semi}
 VarInit -> id * set AssignExpr {comma semi}
    Parameters -> 265
    lpar -> 259
    set -> 266
state 184:
 XorExpr -> XorExpr xor * AndExpr {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    AndExpr -> 267
    CastExpr -> 6
    CatExpr -> 7
    MulExpr -> 23
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    ShiftExpr -> 268
    UnaryExpr -> 38
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 185:
 CastExpr -> cast_ lpar * Type rpar UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CastExpr -> cast_ lpar * CastQual rpar UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CastExpr -> cast_ lpar * rpar UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    BasicType -> 5
    CastQual -> 269
    IdList -> 171
    LambdaType -> 21
    Type -> 270
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    char_ -> 46
    const_ -> 271
    dchar_ -> 48
    double_ -> 50
    float_ -> 55
    immutable_ -> 272
    inout_ -> 273
    int_ -> 60
    long_ -> 61
    real_ -> 67
    shared_ -> 274
    short_ -> 71
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    dot -> 174
    rpar -> 275
    id -> 175
state 186:
 Type -> const_ lpar * Type rpar {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    BasicType -> 5
    IdList -> 171
    LambdaType -> 21
    Type -> 276
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    char_ -> 46
    const_ -> 192
    dchar_ -> 48
    double_ -> 50
    float_ -> 55
    immutable_ -> 193
    inout_ -> 194
    int_ -> 60
    long_ -> 61
    real_ -> 67
    shared_ -> 195
    short_ -> 71
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    dot -> 174
    id -> 175
state 187:
 Foreach -> foreach_ lpar * ForeachTypeList semi Expr rpar Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 Foreach -> foreach_ lpar * ForeachTypeList semi Expr dotdot Expr rpar Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    BasicType -> 5
    ForeachType -> 277
    ForeachTypeList -> 278
    IdList -> 171
    LambdaType -> 21
    Type -> 279
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    char_ -> 46
    const_ -> 192
    dchar_ -> 48
    double_ -> 50
    float_ -> 55
    immutable_ -> 193
    inout_ -> 194
    int_ -> 60
    long_ -> 61
    real_ -> 67
    ref_ -> 280
    shared_ -> 195
    short_ -> 71
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    dot -> 174
    id -> 281
state 188:
 If -> if_ ParExpr * CurlStmtList {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 If -> if_ ParExpr * CurlStmtList else_ CurlStmtList {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    CurlStmtList -> 282
    lcurl -> 92
state 189:
 Type -> immutable_ lpar * Type rpar {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    BasicType -> 5
    IdList -> 171
    LambdaType -> 21
    Type -> 283
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    char_ -> 46
    const_ -> 192
    dchar_ -> 48
    double_ -> 50
    float_ -> 55
    immutable_ -> 193
    inout_ -> 194
    int_ -> 60
    long_ -> 61
    real_ -> 67
    shared_ -> 195
    short_ -> 71
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    dot -> 174
    id -> 175
state 190:
 Type -> inout_ lpar * Type rpar {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    BasicType -> 5
    IdList -> 171
    LambdaType -> 21
    Type -> 284
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    char_ -> 46
    const_ -> 192
    dchar_ -> 48
    double_ -> 50
    float_ -> 55
    immutable_ -> 193
    inout_ -> 194
    int_ -> 60
    long_ -> 61
    real_ -> 67
    shared_ -> 195
    short_ -> 71
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    dot -> 174
    id -> 175
state 191:
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 LambdaType -> Type * function_ Parameters {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 NewExpr -> new_ Type *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 NewExpr -> new_ Type * ArgList {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 Type -> Type * TypeSuffix {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ArgList -> 285
    TypeSuffix -> 177
    delegate_ -> 179
    function_ -> 180
    lpar -> 140
    lbra -> 181
    star -> 182
state 192:
 Type -> const_ * lpar Type rpar {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    lpar -> 186
state 193:
 Type -> immutable_ * lpar Type rpar {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    lpar -> 189
state 194:
 Type -> inout_ * lpar Type rpar {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    lpar -> 190
state 195:
 Type -> shared_ * lpar Type rpar {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    lpar -> 202
state 196:
 Expr -> Expr * comma AssignExpr {comma semi}
 Return -> return_ Expr *  {semi}
    comma -> 124
state 197:
 AddExpr -> MulExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * star UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * div UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * perc UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    star -> 127
    div -> 128
    perc -> 129
state 198:
 AndAndExpr -> OrExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 OrExpr -> OrExpr * or XorExpr {dotdot rpar rbra question comma semi colon set andand or oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    or -> 130
state 199:
 CondExpr -> OrOrExpr *  {dotdot rpar rbra comma semi colon set div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CondExpr -> OrOrExpr * question Expr colon CondExpr {dotdot rpar rbra comma semi colon set div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 OrOrExpr -> OrOrExpr * oror AndAndExpr {dotdot rpar rbra question comma semi colon set oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    question -> 131
    oror -> 132
state 200:
 PostfixExpr -> PostfixExpr * ArgList {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * Slice {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * Index {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * dot id {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * Postfix {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PowExpr -> PostfixExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PowExpr -> PostfixExpr * pow PowExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ArgList -> 133
    Index -> 134
    Postfix -> 135
    Slice -> 136
    dot -> 137
    subsub -> 138
    addadd -> 139
    lpar -> 140
    lbra -> 141
    pow -> 142
state 201:
 AndExpr -> ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AndExpr -> ShiftExpr * and ShiftExpr {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CmpExpr -> ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 EqualExpr -> ShiftExpr * eq ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 EqualExpr -> ShiftExpr * bangeq ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 IdentityExpr -> ShiftExpr * is_ ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 IdentityExpr -> ShiftExpr * bangis ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 InExpr -> ShiftExpr * in_ ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 InExpr -> ShiftExpr * bangin ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 RelExpr -> ShiftExpr * RelOp ShiftExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgtgt AddExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * ltlt AddExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgt AddExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    RelOp -> 147
    in_ -> 148
    is_ -> 149
    bangis -> 150
    bangin -> 151
    and -> 152
    lt -> 153
    lteq -> 154
    ltlt -> 155
    ltgt -> 156
    ltgteq -> 157
    gt -> 158
    gteq -> 159
    gtgt -> 160
    gtgtgt -> 161
    bangeq -> 162
    bangltgt -> 163
    bangltgteq -> 164
    banglt -> 165
    banglteq -> 166
    banggt -> 167
    banggteq -> 168
    eq -> 169
state 202:
 Type -> shared_ lpar * Type rpar {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    BasicType -> 5
    IdList -> 171
    LambdaType -> 21
    Type -> 286
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    char_ -> 46
    const_ -> 192
    dchar_ -> 48
    double_ -> 50
    float_ -> 55
    immutable_ -> 193
    inout_ -> 194
    int_ -> 60
    long_ -> 61
    real_ -> 67
    shared_ -> 195
    short_ -> 71
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    dot -> 174
    id -> 175
state 203:
 While -> while_ ParExpr * Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    AddExpr -> 1
    AndAndExpr -> 2
    AndExpr -> 3
    AssignExpr -> 4
    BasicType -> 5
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    CurlStmtList -> 10
    Decl -> 11
    Declaration -> 12
    EqualExpr -> 13
    Expr -> 14
    Foreach -> 15
    FunctionAttribute -> 16
    IdList -> 17
    IdentityExpr -> 18
    If -> 19
    InExpr -> 20
    LambdaType -> 21
    MethodAttribute -> 22
    MulExpr -> 23
    NewExpr -> 24
    OrExpr -> 25
    OrOrExpr -> 26
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    Return -> 33
    ShiftExpr -> 34
    Stmt -> 287
    StorageClass -> 35
    StorageClasses -> 36
    Type -> 288
    UnaryExpr -> 38
    While -> 39
    XorExpr -> 40
    abstract_ -> 41
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    cast_ -> 45
    char_ -> 46
    const_ -> 47
    dchar_ -> 48
    deprecated_ -> 49
    double_ -> 50
    enum_ -> 51
    extern_ -> 52
    false_ -> 53
    final_ -> 54
    float_ -> 55
    foreach_ -> 56
    if_ -> 57
    immutable_ -> 58
    inout_ -> 59
    int_ -> 60
    long_ -> 61
    new_ -> 62
    nothrow_ -> 63
    null_ -> 64
    override_ -> 65
    pure_ -> 66
    real_ -> 67
    return_ -> 68
    scope_ -> 69
    shared_ -> 70
    short_ -> 71
    static_ -> 72
    super_ -> 73
    synchronized_ -> 74
    this_ -> 75
    true_ -> 76
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    while_ -> 83
    t__FILE__ -> 84
    t__LINE__ -> 85
    t__gshared -> 86
    dot -> 87
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    lcurl -> 92
    semi -> 93
    dollar -> 94
    at -> 95
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 104
state 204:
 IdList -> IdList * dot id {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
 Type -> dot IdList *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    dot -> 126
state 205:
 PostfixExpr -> dot NewExpr *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 206:
 IdList -> id *  {delegate_ function_ dot lbra rbra star id}
 PrimaryExpr -> dot id *  {in_ is_ dot subsub addadd lpar lbra rbra question comma semi set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 207:
 AndAndExpr -> AndAndExpr * andand OrExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AndAndExpr -> AndAndExpr * andand CmpExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 OrOrExpr -> AndAndExpr *  {dotdot rpar rbra question comma semi colon set oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    andand -> 108
state 208:
 Expr -> Expr * comma AssignExpr {rpar comma}
 ParExpr -> lpar Expr * rpar {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ in_ inout_ int_ is_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot dotdot subsub addadd bang lpar rpar lbra rbra lcurl question comma semi colon dollar set at bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set string_ char_lit num id}
    rpar -> 289
    comma -> 124
state 209:
 AddExpr -> MulExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * star UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * div UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * perc UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    star -> 127
    div -> 128
    perc -> 129
state 210:
 OrExpr -> XorExpr *  {dotdot rpar question comma colon set andand or oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 XorExpr -> XorExpr * xor AndExpr {dotdot rpar question comma colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    xor -> 184
state 211:
 StmtList -> Stmt *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id}
state 212:
 CurlStmtList -> lcurl StmtList * rcurl {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ else_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 StmtList -> StmtList * Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id}
    AddExpr -> 1
    AndAndExpr -> 2
    AndExpr -> 3
    AssignExpr -> 4
    BasicType -> 5
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    CurlStmtList -> 10
    Decl -> 11
    Declaration -> 12
    EqualExpr -> 13
    Expr -> 14
    Foreach -> 15
    FunctionAttribute -> 16
    IdList -> 17
    IdentityExpr -> 18
    If -> 19
    InExpr -> 20
    LambdaType -> 21
    MethodAttribute -> 22
    MulExpr -> 23
    NewExpr -> 24
    OrExpr -> 25
    OrOrExpr -> 26
    ParExpr -> 27
    PostfixExpr -> 28
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    Return -> 33
    ShiftExpr -> 34
    Stmt -> 290
    StorageClass -> 35
    StorageClasses -> 214
    Type -> 291
    UnaryExpr -> 38
    While -> 39
    XorExpr -> 40
    abstract_ -> 41
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    cast_ -> 45
    char_ -> 46
    const_ -> 47
    dchar_ -> 48
    deprecated_ -> 49
    double_ -> 50
    enum_ -> 51
    extern_ -> 52
    false_ -> 53
    final_ -> 54
    float_ -> 55
    foreach_ -> 56
    if_ -> 57
    immutable_ -> 58
    inout_ -> 59
    int_ -> 60
    long_ -> 61
    new_ -> 62
    nothrow_ -> 63
    null_ -> 64
    override_ -> 65
    pure_ -> 66
    real_ -> 67
    return_ -> 68
    scope_ -> 69
    shared_ -> 70
    short_ -> 71
    static_ -> 72
    super_ -> 73
    synchronized_ -> 74
    this_ -> 75
    true_ -> 76
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    while_ -> 83
    t__FILE__ -> 84
    t__LINE__ -> 85
    t__gshared -> 86
    dot -> 87
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    lcurl -> 92
    rcurl -> 292
    semi -> 93
    dollar -> 94
    at -> 95
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 104
state 213:
 StorageClasses -> StorageClass *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
 StorageClasses -> StorageClass *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
state 214:
 Decl -> StorageClasses * Decl {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 StorageClasses -> StorageClasses * StorageClass {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot at id}
    BasicType -> 5
    Decl -> 170
    FunctionAttribute -> 16
    IdList -> 171
    LambdaType -> 21
    MethodAttribute -> 22
    StorageClass -> 172
    StorageClasses -> 36
    Type -> 173
    abstract_ -> 41
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    char_ -> 46
    const_ -> 47
    dchar_ -> 48
    deprecated_ -> 49
    double_ -> 50
    enum_ -> 51
    extern_ -> 52
    final_ -> 54
    float_ -> 55
    immutable_ -> 58
    inout_ -> 59
    int_ -> 60
    long_ -> 61
    nothrow_ -> 63
    override_ -> 65
    pure_ -> 66
    real_ -> 67
    scope_ -> 69
    shared_ -> 70
    short_ -> 71
    static_ -> 72
    synchronized_ -> 74
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    t__gshared -> 86
    dot -> 174
    at -> 95
    id -> 175
state 215:
 CurlStmtList -> lcurl rcurl *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ else_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 216:
 FunctionAttribute -> at id *  {abstract_ auto_ bool_ byte_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ final_ float_ immutable_ inout_ int_ long_ nothrow_ override_ pure_ real_ scope_ shared_ short_ static_ synchronized_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ t__gshared dot lcurl at id}
state 217:
 AddExpr -> AddExpr sub MulExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * star UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * div UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * perc UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    star -> 127
    div -> 128
    perc -> 129
state 218:
 AddExpr -> AddExpr add MulExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * star UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * div UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * perc UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    star -> 127
    div -> 128
    perc -> 129
state 219:
 CatExpr -> AddExpr tilde MulExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * star UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * div UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 MulExpr -> MulExpr * perc UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    star -> 127
    div -> 128
    perc -> 129
state 220:
 AndAndExpr -> AndAndExpr andand CmpExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 221:
 AndAndExpr -> AndAndExpr andand OrExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 OrExpr -> OrExpr * or XorExpr {dotdot rpar rbra question comma semi colon set andand or oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    or -> 130
state 222:
 AssignExpr -> CondExpr OpSet AssignExpr *  {dotdot rpar rbra comma semi colon}
state 223:
 Expr -> Expr comma AssignExpr *  {dotdot rpar comma semi colon}
state 224:
 PostfixExpr -> PostfixExpr * ArgList {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * Slice {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * Index {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * dot id {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * Postfix {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PowExpr -> PostfixExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PowExpr -> PostfixExpr * pow PowExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ArgList -> 133
    Index -> 134
    Postfix -> 135
    Slice -> 136
    dot -> 137
    subsub -> 138
    addadd -> 139
    lpar -> 140
    lbra -> 141
    pow -> 142
state 225:
 IdList -> IdList dot id *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 226:
 MulExpr -> MulExpr star UnaryExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 227:
 MulExpr -> MulExpr div UnaryExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 228:
 MulExpr -> MulExpr perc UnaryExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 229:
 AndExpr -> ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AndExpr -> ShiftExpr * and ShiftExpr {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgtgt AddExpr {dotdot rpar rbra question comma semi colon set and andand or oror ltlt gtgt gtgtgt xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * ltlt AddExpr {dotdot rpar rbra question comma semi colon set and andand or oror ltlt gtgt gtgtgt xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgt AddExpr {dotdot rpar rbra question comma semi colon set and andand or oror ltlt gtgt gtgtgt xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    and -> 152
    ltlt -> 155
    gtgt -> 160
    gtgtgt -> 161
state 230:
 OrExpr -> OrExpr or XorExpr *  {dotdot rpar rbra question comma semi colon set andand or oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 XorExpr -> XorExpr * xor AndExpr {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    xor -> 184
state 231:
 CondExpr -> OrOrExpr question Expr * colon CondExpr {dotdot rpar rbra comma semi colon set div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 Expr -> Expr * comma AssignExpr {comma colon}
    comma -> 124
    colon -> 293
state 232:
 CondExpr -> OrOrExpr *  {comma colon set div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CondExpr -> OrOrExpr * question Expr colon CondExpr {comma colon set div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 OrOrExpr -> OrOrExpr * oror AndAndExpr {question comma colon set oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    question -> 131
    oror -> 132
state 233:
 AndExpr -> ShiftExpr *  {dotdot rpar rbra question comma colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AndExpr -> ShiftExpr * and ShiftExpr {dotdot rpar rbra question comma colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CmpExpr -> ShiftExpr *  {dotdot rpar rbra question comma colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 EqualExpr -> ShiftExpr * eq ShiftExpr {dotdot rpar rbra question comma colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 EqualExpr -> ShiftExpr * bangeq ShiftExpr {dotdot rpar rbra question comma colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 IdentityExpr -> ShiftExpr * is_ ShiftExpr {dotdot rpar rbra question comma colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 IdentityExpr -> ShiftExpr * bangis ShiftExpr {dotdot rpar rbra question comma colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 InExpr -> ShiftExpr * in_ ShiftExpr {dotdot rpar rbra question comma colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 InExpr -> ShiftExpr * bangin ShiftExpr {dotdot rpar rbra question comma colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 RelExpr -> ShiftExpr * RelOp ShiftExpr {dotdot rpar rbra question comma colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgtgt AddExpr {in_ is_ dotdot rpar rbra question comma colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * ltlt AddExpr {in_ is_ dotdot rpar rbra question comma colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgt AddExpr {in_ is_ dotdot rpar rbra question comma colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    RelOp -> 147
    in_ -> 148
    is_ -> 149
    bangis -> 150
    bangin -> 151
    and -> 152
    lt -> 153
    lteq -> 154
    ltlt -> 155
    ltgt -> 156
    ltgteq -> 157
    gt -> 158
    gteq -> 159
    gtgt -> 160
    gtgtgt -> 161
    bangeq -> 162
    bangltgt -> 163
    bangltgteq -> 164
    banglt -> 165
    banglteq -> 166
    banggt -> 167
    banggteq -> 168
    eq -> 169
state 234:
 AndAndExpr -> AndAndExpr * andand OrExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AndAndExpr -> AndAndExpr * andand CmpExpr {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 OrOrExpr -> OrOrExpr oror AndAndExpr *  {dotdot rpar rbra question comma semi colon set oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    andand -> 108
state 235:
 PostfixExpr -> PostfixExpr dot id *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 236:
 ComExprList -> AssignExpr *  {rpar comma}
state 237:
 ArgList -> lpar ComExprList * rpar {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ComExprList -> ComExprList * comma AssignExpr {rpar comma}
 ComExprList -> ComExprList * comma {rpar comma}
    rpar -> 294
    comma -> 295
state 238:
 ArgList -> lpar rpar *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 239:
 ComExprList -> AssignExpr *  {rbra comma}
 Slice -> lbra AssignExpr * dotdot AssignExpr rbra {in_ is_ dot subsub addadd lpar rpar lbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    dotdot -> 296
state 240:
 ComExprList -> ComExprList * comma AssignExpr {rbra comma}
 ComExprList -> ComExprList * comma {rbra comma}
 Index -> lbra ComExprList * rbra {in_ is_ dot subsub addadd lpar rpar lbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    rbra -> 297
    comma -> 295
state 241:
 PostfixExpr -> PostfixExpr * ArgList {in_ is_ dot dotdot subsub addadd lpar lbra rbra question comma semi set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * Slice {in_ is_ dot dotdot subsub addadd lpar lbra rbra question comma semi set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * Index {in_ is_ dot dotdot subsub addadd lpar lbra rbra question comma semi set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * dot id {in_ is_ dot dotdot subsub addadd lpar lbra rbra question comma semi set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PostfixExpr -> PostfixExpr * Postfix {in_ is_ dot dotdot subsub addadd lpar lbra rbra question comma semi set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PowExpr -> PostfixExpr *  {in_ is_ dotdot rbra question comma semi set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 PowExpr -> PostfixExpr * pow PowExpr {in_ is_ dotdot rbra question comma semi set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ArgList -> 133
    Index -> 134
    Postfix -> 135
    Slice -> 136
    dot -> 137
    subsub -> 138
    addadd -> 139
    lpar -> 140
    lbra -> 141
    pow -> 142
state 242:
 Slice -> lbra rbra *  {in_ is_ dot subsub addadd lpar rpar lbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 243:
 PowExpr -> PostfixExpr pow PowExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 244:
 PrimaryExpr -> dot id *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 245:
 RelExpr -> ShiftExpr RelOp ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * ltlt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ltlt -> 155
    gtgt -> 160
    gtgtgt -> 161
state 246:
 InExpr -> ShiftExpr in_ ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * ltlt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ltlt -> 155
    gtgt -> 160
    gtgtgt -> 161
state 247:
 IdentityExpr -> ShiftExpr is_ ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * ltlt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ltlt -> 155
    gtgt -> 160
    gtgtgt -> 161
state 248:
 IdentityExpr -> ShiftExpr bangis ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * ltlt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ltlt -> 155
    gtgt -> 160
    gtgtgt -> 161
state 249:
 InExpr -> ShiftExpr bangin ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * ltlt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ltlt -> 155
    gtgt -> 160
    gtgtgt -> 161
state 250:
 AndExpr -> ShiftExpr and ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgtgt AddExpr {dotdot rpar rbra question comma semi colon set andand or oror ltlt gtgt gtgtgt xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * ltlt AddExpr {dotdot rpar rbra question comma semi colon set andand or oror ltlt gtgt gtgtgt xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgt AddExpr {dotdot rpar rbra question comma semi colon set andand or oror ltlt gtgt gtgtgt xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ltlt -> 155
    gtgt -> 160
    gtgtgt -> 161
state 251:
 AddExpr -> AddExpr * add MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AddExpr -> AddExpr * sub MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CatExpr -> AddExpr * tilde MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr ltlt AddExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    sub -> 105
    add -> 106
    tilde -> 107
state 252:
 AddExpr -> AddExpr * add MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AddExpr -> AddExpr * sub MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CatExpr -> AddExpr * tilde MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr gtgt AddExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    sub -> 105
    add -> 106
    tilde -> 107
state 253:
 AddExpr -> AddExpr * add MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AddExpr -> AddExpr * sub MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CatExpr -> AddExpr * tilde MulExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr gtgtgt AddExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    sub -> 105
    add -> 106
    tilde -> 107
state 254:
 EqualExpr -> ShiftExpr bangeq ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * ltlt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ltlt -> 155
    gtgt -> 160
    gtgtgt -> 161
state 255:
 EqualExpr -> ShiftExpr eq ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand oror div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * ltlt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgt AddExpr {dotdot rpar rbra question comma semi colon set andand oror ltlt gtgt gtgtgt div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    ltlt -> 155
    gtgt -> 160
    gtgtgt -> 161
state 256:
 ComVarInit -> ComVarInit comma * VarInit {comma semi}
    VarInit -> 298
    id -> 299
state 257:
 Decl -> Type ComVarInit semi *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 258:
 LambdaType -> Type delegate_ Parameters *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 259:
 Parameters -> lpar * ParameterList rpar {delegate_ function_ in_ is_ nothrow_ pure_ dot dotdot subsub addadd lpar rpar lbra rbra lcurl question comma semi colon set at bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
 Parameters -> lpar * rpar {delegate_ function_ in_ is_ nothrow_ pure_ dot dotdot subsub addadd lpar rpar lbra rbra lcurl question comma semi colon set at bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    BasicType -> 5
    IdList -> 171
    LambdaType -> 21
    Parameter -> 300
    ParameterList -> 301
    Type -> 302
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    char_ -> 46
    const_ -> 192
    dchar_ -> 48
    double_ -> 50
    float_ -> 55
    immutable_ -> 193
    inout_ -> 194
    int_ -> 60
    long_ -> 61
    real_ -> 67
    shared_ -> 195
    short_ -> 71
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    dot -> 174
    rpar -> 303
    id -> 175
state 260:
 LambdaType -> Type function_ Parameters *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 261:
 AddExpr -> AddExpr * add MulExpr {in_ is_ rbra question set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AddExpr -> AddExpr * sub MulExpr {in_ is_ rbra question set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 CatExpr -> AddExpr * tilde MulExpr {in_ is_ rbra question set bangis bangin and sub add tilde andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> AddExpr *  {in_ is_ rbra question set bangis bangin and andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    sub -> 105
    add -> 106
    tilde -> 107
state 262:
 TypeSuffix -> lbra AssignExpr * rbra {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    rbra -> 304
state 263:
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ lbra rbra star}
 LambdaType -> Type * function_ Parameters {delegate_ function_ lbra rbra star}
 Type -> Type * TypeSuffix {delegate_ function_ lbra rbra star}
 TypeSuffix -> lbra Type * rbra {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    TypeSuffix -> 177
    delegate_ -> 179
    function_ -> 180
    lbra -> 181
    rbra -> 305
    star -> 182
state 264:
 TypeSuffix -> lbra rbra *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 265:
 Decl -> Type id Parameters * FunctionBody {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 Decl -> Type id Parameters * FunctionAttributes FunctionBody {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    CurlStmtList -> 306
    FunctionAttribute -> 307
    FunctionAttributes -> 308
    FunctionBody -> 309
    nothrow_ -> 63
    pure_ -> 66
    lcurl -> 92
    at -> 95
state 266:
 VarInit -> id set * AssignExpr {comma semi}
    AddExpr -> 1
    AndAndExpr -> 207
    AndExpr -> 3
    AssignExpr -> 310
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    EqualExpr -> 13
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 197
    NewExpr -> 24
    OrExpr -> 198
    OrOrExpr -> 26
    ParExpr -> 27
    PostfixExpr -> 241
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 201
    UnaryExpr -> 38
    XorExpr -> 40
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 267:
 XorExpr -> XorExpr xor AndExpr *  {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 268:
 AndExpr -> ShiftExpr *  {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 AndExpr -> ShiftExpr * and ShiftExpr {dotdot rpar rbra question comma semi colon set andand or oror xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgtgt AddExpr {dotdot rpar rbra question comma semi colon set and andand or oror ltlt gtgt gtgtgt xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * ltlt AddExpr {dotdot rpar rbra question comma semi colon set and andand or oror ltlt gtgt gtgtgt xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 ShiftExpr -> ShiftExpr * gtgt AddExpr {dotdot rpar rbra question comma semi colon set and andand or oror ltlt gtgt gtgtgt xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    and -> 152
    ltlt -> 155
    gtgt -> 160
    gtgtgt -> 161
state 269:
 CastExpr -> cast_ lpar CastQual * rpar UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    rpar -> 311
state 270:
 CastExpr -> cast_ lpar Type * rpar UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ rpar lbra star}
 LambdaType -> Type * function_ Parameters {delegate_ function_ rpar lbra star}
 Type -> Type * TypeSuffix {delegate_ function_ rpar lbra star}
    TypeSuffix -> 177
    delegate_ -> 179
    function_ -> 180
    rpar -> 312
    lbra -> 181
    star -> 182
state 271:
 CastQual -> const_ *  {rpar}
 CastQual -> const_ * shared_ {rpar}
 Type -> const_ * lpar Type rpar {delegate_ function_ rpar lbra star}
    shared_ -> 313
    lpar -> 186
state 272:
 CastQual -> immutable_ *  {rpar}
 Type -> immutable_ * lpar Type rpar {delegate_ function_ rpar lbra star}
    lpar -> 189
state 273:
 CastQual -> inout_ *  {rpar}
 CastQual -> inout_ * shared_ {rpar}
 Type -> inout_ * lpar Type rpar {delegate_ function_ rpar lbra star}
    shared_ -> 314
    lpar -> 190
state 274:
 CastQual -> shared_ *  {rpar}
 CastQual -> shared_ * const_ {rpar}
 CastQual -> shared_ * inout_ {rpar}
 Type -> shared_ * lpar Type rpar {delegate_ function_ rpar lbra star}
    const_ -> 315
    inout_ -> 316
    lpar -> 202
state 275:
 CastExpr -> cast_ lpar rpar * UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    CastExpr -> 6
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    UnaryExpr -> 317
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 276:
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ rpar lbra star}
 LambdaType -> Type * function_ Parameters {delegate_ function_ rpar lbra star}
 Type -> Type * TypeSuffix {delegate_ function_ rpar lbra star}
 Type -> const_ lpar Type * rpar {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    TypeSuffix -> 177
    delegate_ -> 179
    function_ -> 180
    rpar -> 318
    lbra -> 181
    star -> 182
state 277:
 ForeachTypeList -> ForeachType *  {comma semi}
state 278:
 Foreach -> foreach_ lpar ForeachTypeList * semi Expr rpar Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 Foreach -> foreach_ lpar ForeachTypeList * semi Expr dotdot Expr rpar Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 ForeachTypeList -> ForeachTypeList * comma ForeachType {comma semi}
    comma -> 319
    semi -> 320
state 279:
 ForeachType -> Type * id {comma semi}
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ lbra star id}
 LambdaType -> Type * function_ Parameters {delegate_ function_ lbra star id}
 Type -> Type * TypeSuffix {delegate_ function_ lbra star id}
    TypeSuffix -> 177
    delegate_ -> 179
    function_ -> 180
    lbra -> 181
    star -> 182
    id -> 321
state 280:
 ForeachType -> ref_ * Type id {comma semi}
 ForeachType -> ref_ * id {comma semi}
    BasicType -> 5
    IdList -> 171
    LambdaType -> 21
    Type -> 322
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    char_ -> 46
    const_ -> 192
    dchar_ -> 48
    double_ -> 50
    float_ -> 55
    immutable_ -> 193
    inout_ -> 194
    int_ -> 60
    long_ -> 61
    real_ -> 67
    shared_ -> 195
    short_ -> 71
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    dot -> 174
    id -> 323
state 281:
 ForeachType -> id *  {comma semi}
 IdList -> id *  {delegate_ function_ dot lbra star id}
state 282:
 If -> if_ ParExpr CurlStmtList *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 If -> if_ ParExpr CurlStmtList * else_ CurlStmtList {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    else_ -> 324
state 283:
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ rpar lbra star}
 LambdaType -> Type * function_ Parameters {delegate_ function_ rpar lbra star}
 Type -> Type * TypeSuffix {delegate_ function_ rpar lbra star}
 Type -> immutable_ lpar Type * rpar {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    TypeSuffix -> 177
    delegate_ -> 179
    function_ -> 180
    rpar -> 325
    lbra -> 181
    star -> 182
state 284:
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ rpar lbra star}
 LambdaType -> Type * function_ Parameters {delegate_ function_ rpar lbra star}
 Type -> Type * TypeSuffix {delegate_ function_ rpar lbra star}
 Type -> inout_ lpar Type * rpar {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    TypeSuffix -> 177
    delegate_ -> 179
    function_ -> 180
    rpar -> 326
    lbra -> 181
    star -> 182
state 285:
 NewExpr -> new_ Type ArgList *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 286:
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ rpar lbra star}
 LambdaType -> Type * function_ Parameters {delegate_ function_ rpar lbra star}
 Type -> Type * TypeSuffix {delegate_ function_ rpar lbra star}
 Type -> shared_ lpar Type * rpar {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    TypeSuffix -> 177
    delegate_ -> 179
    function_ -> 180
    rpar -> 327
    lbra -> 181
    star -> 182
state 287:
 While -> while_ ParExpr Stmt *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 288:
 Decl -> Type * id Parameters FunctionBody {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 Decl -> Type * id Parameters FunctionAttributes FunctionBody {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 Decl -> Type * ComVarInit semi {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ lbra star id}
 LambdaType -> Type * function_ Parameters {delegate_ function_ lbra star id}
 Type -> Type * TypeSuffix {delegate_ function_ lbra star id}
    ComVarInit -> 176
    TypeSuffix -> 177
    VarInit -> 178
    delegate_ -> 179
    function_ -> 180
    lbra -> 181
    star -> 182
    id -> 183
state 289:
 ParExpr -> lpar Expr rpar *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ in_ inout_ int_ is_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot dotdot subsub addadd bang lpar rpar lbra rbra lcurl question comma semi colon dollar set at bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set string_ char_lit num id}
state 290:
 StmtList -> StmtList Stmt *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id}
state 291:
 Decl -> Type * id Parameters FunctionBody {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id}
 Decl -> Type * id Parameters FunctionAttributes FunctionBody {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id}
 Decl -> Type * ComVarInit semi {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id}
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ lbra star id}
 LambdaType -> Type * function_ Parameters {delegate_ function_ lbra star id}
 Type -> Type * TypeSuffix {delegate_ function_ lbra star id}
    ComVarInit -> 176
    TypeSuffix -> 177
    VarInit -> 178
    delegate_ -> 179
    function_ -> 180
    lbra -> 181
    star -> 182
    id -> 183
state 292:
 CurlStmtList -> lcurl StmtList rcurl *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ else_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 293:
 CondExpr -> OrOrExpr question Expr colon * CondExpr {dotdot rpar rbra comma semi colon set div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    AndAndExpr -> 207
    AndExpr -> 3
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 328
    EqualExpr -> 13
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 197
    NewExpr -> 24
    OrExpr -> 198
    OrOrExpr -> 199
    ParExpr -> 27
    PostfixExpr -> 224
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 34
    UnaryExpr -> 38
    XorExpr -> 40
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 294:
 ArgList -> lpar ComExprList rpar *  {in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 295:
 ComExprList -> ComExprList comma * AssignExpr {rpar rbra comma}
 ComExprList -> ComExprList comma *  {rpar rbra comma}
    AddExpr -> 1
    AndAndExpr -> 207
    AndExpr -> 3
    AssignExpr -> 329
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    EqualExpr -> 13
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 197
    NewExpr -> 24
    OrExpr -> 198
    OrOrExpr -> 199
    ParExpr -> 27
    PostfixExpr -> 224
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 34
    UnaryExpr -> 38
    XorExpr -> 40
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 296:
 Slice -> lbra AssignExpr dotdot * AssignExpr rbra {in_ is_ dot subsub addadd lpar rpar lbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    AddExpr -> 1
    AndAndExpr -> 207
    AndExpr -> 3
    AssignExpr -> 330
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    EqualExpr -> 13
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 197
    NewExpr -> 24
    OrExpr -> 198
    OrOrExpr -> 26
    ParExpr -> 27
    PostfixExpr -> 241
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 201
    UnaryExpr -> 38
    XorExpr -> 40
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 297:
 Index -> lbra ComExprList rbra *  {in_ is_ dot subsub addadd lpar rpar lbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 298:
 ComVarInit -> ComVarInit comma VarInit *  {comma semi}
state 299:
 VarInit -> id *  {comma semi}
 VarInit -> id * set AssignExpr {comma semi}
    set -> 266
state 300:
 ParameterList -> Parameter *  {rpar}
 ParameterList -> Parameter * comma ParameterList {rpar}
    comma -> 331
state 301:
 Parameters -> lpar ParameterList * rpar {delegate_ function_ in_ is_ nothrow_ pure_ dot dotdot subsub addadd lpar rpar lbra rbra lcurl question comma semi colon set at bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
    rpar -> 332
state 302:
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ rpar lbra comma star id}
 LambdaType -> Type * function_ Parameters {delegate_ function_ rpar lbra comma star id}
 Parameter -> Type *  {rpar comma}
 Parameter -> Type * id {rpar comma}
 Type -> Type * TypeSuffix {delegate_ function_ rpar lbra comma star id}
    TypeSuffix -> 177
    delegate_ -> 179
    function_ -> 180
    lbra -> 181
    star -> 182
    id -> 333
state 303:
 Parameters -> lpar rpar *  {delegate_ function_ in_ is_ nothrow_ pure_ dot dotdot subsub addadd lpar rpar lbra rbra lcurl question comma semi colon set at bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 304:
 TypeSuffix -> lbra AssignExpr rbra *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 305:
 TypeSuffix -> lbra Type rbra *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 306:
 FunctionBody -> CurlStmtList *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 307:
 FunctionAttributes -> FunctionAttribute *  {nothrow_ pure_ lcurl at}
state 308:
 Decl -> Type id Parameters FunctionAttributes * FunctionBody {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 FunctionAttributes -> FunctionAttributes * FunctionAttribute {nothrow_ pure_ lcurl at}
    CurlStmtList -> 306
    FunctionAttribute -> 334
    FunctionBody -> 335
    nothrow_ -> 63
    pure_ -> 66
    lcurl -> 92
    at -> 95
state 309:
 Decl -> Type id Parameters FunctionBody *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 310:
 VarInit -> id set AssignExpr *  {comma semi}
state 311:
 CastExpr -> cast_ lpar CastQual rpar * UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    CastExpr -> 6
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    UnaryExpr -> 336
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 312:
 CastExpr -> cast_ lpar Type rpar * UnaryExpr {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    CastExpr -> 6
    NewExpr -> 24
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    UnaryExpr -> 337
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 313:
 CastQual -> const_ shared_ *  {rpar}
state 314:
 CastQual -> inout_ shared_ *  {rpar}
state 315:
 CastQual -> shared_ const_ *  {rpar}
state 316:
 CastQual -> shared_ inout_ *  {rpar}
state 317:
 CastExpr -> cast_ lpar rpar UnaryExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 318:
 Type -> const_ lpar Type rpar *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 319:
 ForeachTypeList -> ForeachTypeList comma * ForeachType {comma semi}
    BasicType -> 5
    ForeachType -> 338
    IdList -> 171
    LambdaType -> 21
    Type -> 279
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    char_ -> 46
    const_ -> 192
    dchar_ -> 48
    double_ -> 50
    float_ -> 55
    immutable_ -> 193
    inout_ -> 194
    int_ -> 60
    long_ -> 61
    real_ -> 67
    ref_ -> 280
    shared_ -> 195
    short_ -> 71
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    dot -> 174
    id -> 281
state 320:
 Foreach -> foreach_ lpar ForeachTypeList semi * Expr rpar Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 Foreach -> foreach_ lpar ForeachTypeList semi * Expr dotdot Expr rpar Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    AddExpr -> 1
    AndAndExpr -> 207
    AndExpr -> 3
    AssignExpr -> 4
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    EqualExpr -> 13
    Expr -> 339
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 23
    NewExpr -> 24
    OrExpr -> 25
    OrOrExpr -> 199
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 233
    UnaryExpr -> 38
    XorExpr -> 210
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 321:
 ForeachType -> Type id *  {comma semi}
state 322:
 ForeachType -> ref_ Type * id {comma semi}
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ lbra star id}
 LambdaType -> Type * function_ Parameters {delegate_ function_ lbra star id}
 Type -> Type * TypeSuffix {delegate_ function_ lbra star id}
    TypeSuffix -> 177
    delegate_ -> 179
    function_ -> 180
    lbra -> 181
    star -> 182
    id -> 340
state 323:
 ForeachType -> ref_ id *  {comma semi}
 IdList -> id *  {delegate_ function_ dot lbra star id}
state 324:
 If -> if_ ParExpr CurlStmtList else_ * CurlStmtList {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    CurlStmtList -> 341
    lcurl -> 92
state 325:
 Type -> immutable_ lpar Type rpar *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 326:
 Type -> inout_ lpar Type rpar *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 327:
 Type -> shared_ lpar Type rpar *  {delegate_ function_ in_ is_ dot dotdot subsub addadd lpar rpar lbra rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 328:
 CondExpr -> OrOrExpr question Expr colon CondExpr *  {dotdot rpar rbra comma semi colon set div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 329:
 ComExprList -> ComExprList comma AssignExpr *  {rpar rbra comma}
state 330:
 Slice -> lbra AssignExpr dotdot AssignExpr * rbra {in_ is_ dot subsub addadd lpar rpar lbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
    rbra -> 342
state 331:
 ParameterList -> Parameter comma * ParameterList {rpar}
    BasicType -> 5
    IdList -> 17
    LambdaType -> 21
    Parameter -> 300
    ParameterList -> 343
    Type -> 344
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    char_ -> 46
    const_ -> 192
    dchar_ -> 48
    double_ -> 50
    float_ -> 55
    immutable_ -> 193
    inout_ -> 194
    int_ -> 60
    long_ -> 61
    real_ -> 67
    shared_ -> 195
    short_ -> 71
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    dot -> 174
    id -> 175
state 332:
 Parameters -> lpar ParameterList rpar *  {delegate_ function_ in_ is_ nothrow_ pure_ dot dotdot subsub addadd lpar rpar lbra rbra lcurl question comma semi colon set at bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set id}
state 333:
 Parameter -> Type id *  {rpar comma}
state 334:
 FunctionAttributes -> FunctionAttributes FunctionAttribute *  {nothrow_ pure_ lcurl at}
state 335:
 Decl -> Type id Parameters FunctionAttributes FunctionBody *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 336:
 CastExpr -> cast_ lpar CastQual rpar UnaryExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 337:
 CastExpr -> cast_ lpar Type rpar UnaryExpr *  {in_ is_ dotdot rpar rbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 338:
 ForeachTypeList -> ForeachTypeList comma ForeachType *  {comma semi}
state 339:
 Expr -> Expr * comma AssignExpr {dotdot rpar comma}
 Foreach -> foreach_ lpar ForeachTypeList semi Expr * rpar Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
 Foreach -> foreach_ lpar ForeachTypeList semi Expr * dotdot Expr rpar Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    dotdot -> 345
    rpar -> 346
    comma -> 124
state 340:
 ForeachType -> ref_ Type id *  {comma semi}
state 341:
 If -> if_ ParExpr CurlStmtList else_ CurlStmtList *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 342:
 Slice -> lbra AssignExpr dotdot AssignExpr rbra *  {in_ is_ dot subsub addadd lpar rpar lbra question comma semi colon set bangis bangin and sub add star tilde div andand or oror lt lteq ltlt ltgt ltgteq gt gteq gtgt gtgtgt bangeq bangltgt bangltgteq banglt banglteq banggt banggteq eq perc xor pow div_set and_set or_set sub_set add_set ltlt_set gtgt_set gtgtgt_set star_set perc_set xor_set pow_set tilde_set}
state 343:
 ParameterList -> Parameter comma ParameterList *  {rpar}
state 344:
 LambdaType -> Type * delegate_ Parameters {delegate_ function_ rpar lbra comma star id}
 LambdaType -> Type * function_ Parameters {delegate_ function_ rpar lbra comma star id}
 Parameter -> Type *  {rpar comma}
 Parameter -> Type * id {rpar comma}
 Type -> Type * TypeSuffix {delegate_ function_ rpar lbra comma star id}
    TypeSuffix -> 177
    delegate_ -> 179
    function_ -> 180
    lbra -> 181
    star -> 182
    id -> 333
state 345:
 Foreach -> foreach_ lpar ForeachTypeList semi Expr dotdot * Expr rpar Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    AddExpr -> 1
    AndAndExpr -> 207
    AndExpr -> 3
    AssignExpr -> 4
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    EqualExpr -> 13
    Expr -> 347
    IdentityExpr -> 18
    InExpr -> 20
    MulExpr -> 23
    NewExpr -> 24
    OrExpr -> 25
    OrOrExpr -> 199
    ParExpr -> 27
    PostfixExpr -> 200
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    ShiftExpr -> 233
    UnaryExpr -> 38
    XorExpr -> 210
    cast_ -> 45
    false_ -> 53
    new_ -> 62
    null_ -> 64
    super_ -> 73
    this_ -> 75
    true_ -> 76
    t__FILE__ -> 84
    t__LINE__ -> 85
    dot -> 144
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    dollar -> 94
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 145
state 346:
 Foreach -> foreach_ lpar ForeachTypeList semi Expr rpar * Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    AddExpr -> 1
    AndAndExpr -> 207
    AndExpr -> 3
    AssignExpr -> 4
    BasicType -> 5
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    CurlStmtList -> 10
    Decl -> 11
    Declaration -> 12
    EqualExpr -> 13
    Expr -> 348
    Foreach -> 15
    FunctionAttribute -> 16
    IdList -> 17
    IdentityExpr -> 18
    If -> 19
    InExpr -> 20
    LambdaType -> 21
    MethodAttribute -> 22
    MulExpr -> 197
    NewExpr -> 24
    OrExpr -> 198
    OrOrExpr -> 199
    ParExpr -> 27
    PostfixExpr -> 241
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    Return -> 33
    ShiftExpr -> 34
    Stmt -> 349
    StorageClass -> 35
    StorageClasses -> 214
    Type -> 288
    UnaryExpr -> 38
    While -> 39
    XorExpr -> 40
    abstract_ -> 41
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    cast_ -> 45
    char_ -> 46
    const_ -> 47
    dchar_ -> 48
    deprecated_ -> 49
    double_ -> 50
    enum_ -> 51
    extern_ -> 52
    false_ -> 53
    final_ -> 54
    float_ -> 55
    foreach_ -> 56
    if_ -> 57
    immutable_ -> 58
    inout_ -> 59
    int_ -> 60
    long_ -> 61
    new_ -> 62
    nothrow_ -> 63
    null_ -> 64
    override_ -> 65
    pure_ -> 66
    real_ -> 67
    return_ -> 68
    scope_ -> 69
    shared_ -> 70
    short_ -> 71
    static_ -> 72
    super_ -> 73
    synchronized_ -> 74
    this_ -> 75
    true_ -> 76
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    while_ -> 83
    t__FILE__ -> 84
    t__LINE__ -> 85
    t__gshared -> 86
    dot -> 87
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    lcurl -> 92
    semi -> 93
    dollar -> 94
    at -> 95
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 104
state 347:
 Expr -> Expr * comma AssignExpr {rpar comma}
 Foreach -> foreach_ lpar ForeachTypeList semi Expr dotdot Expr * rpar Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    rpar -> 350
    comma -> 124
state 348:
 Expr -> Expr * comma AssignExpr {comma semi}
 Stmt -> Expr * semi {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    comma -> 124
    semi -> 125
state 349:
 Foreach -> foreach_ lpar ForeachTypeList semi Expr rpar Stmt *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
state 350:
 Foreach -> foreach_ lpar ForeachTypeList semi Expr dotdot Expr rpar * Stmt {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
    AddExpr -> 1
    AndAndExpr -> 207
    AndExpr -> 3
    AssignExpr -> 4
    BasicType -> 5
    CastExpr -> 6
    CatExpr -> 7
    CmpExpr -> 8
    CondExpr -> 9
    CurlStmtList -> 10
    Decl -> 11
    Declaration -> 12
    EqualExpr -> 13
    Expr -> 348
    Foreach -> 15
    FunctionAttribute -> 16
    IdList -> 17
    IdentityExpr -> 18
    If -> 19
    InExpr -> 20
    LambdaType -> 21
    MethodAttribute -> 22
    MulExpr -> 197
    NewExpr -> 24
    OrExpr -> 198
    OrOrExpr -> 199
    ParExpr -> 27
    PostfixExpr -> 241
    PowExpr -> 29
    Prefix -> 30
    PrimaryExpr -> 31
    RelExpr -> 32
    Return -> 33
    ShiftExpr -> 34
    Stmt -> 351
    StorageClass -> 35
    StorageClasses -> 214
    Type -> 288
    UnaryExpr -> 38
    While -> 39
    XorExpr -> 40
    abstract_ -> 41
    auto_ -> 42
    bool_ -> 43
    byte_ -> 44
    cast_ -> 45
    char_ -> 46
    const_ -> 47
    dchar_ -> 48
    deprecated_ -> 49
    double_ -> 50
    enum_ -> 51
    extern_ -> 52
    false_ -> 53
    final_ -> 54
    float_ -> 55
    foreach_ -> 56
    if_ -> 57
    immutable_ -> 58
    inout_ -> 59
    int_ -> 60
    long_ -> 61
    new_ -> 62
    nothrow_ -> 63
    null_ -> 64
    override_ -> 65
    pure_ -> 66
    real_ -> 67
    return_ -> 68
    scope_ -> 69
    shared_ -> 70
    short_ -> 71
    static_ -> 72
    super_ -> 73
    synchronized_ -> 74
    this_ -> 75
    true_ -> 76
    ubyte_ -> 77
    uint_ -> 78
    ulong_ -> 79
    ushort_ -> 80
    void_ -> 81
    wchar_ -> 82
    while_ -> 83
    t__FILE__ -> 84
    t__LINE__ -> 85
    t__gshared -> 86
    dot -> 87
    subsub -> 88
    addadd -> 89
    bang -> 90
    lpar -> 91
    lcurl -> 92
    semi -> 93
    dollar -> 94
    at -> 95
    and -> 96
    sub -> 97
    add -> 98
    star -> 99
    tilde -> 100
    string_ -> 101
    char_lit -> 102
    num -> 103
    id -> 104
state 351:
 Foreach -> foreach_ lpar ForeachTypeList semi Expr dotdot Expr rpar Stmt *  {abstract_ auto_ bool_ byte_ cast_ char_ const_ dchar_ deprecated_ double_ enum_ extern_ false_ final_ float_ foreach_ if_ immutable_ inout_ int_ long_ new_ nothrow_ null_ override_ pure_ real_ return_ scope_ shared_ short_ static_ super_ synchronized_ this_ true_ ubyte_ uint_ ulong_ ushort_ void_ wchar_ while_ t__FILE__ t__LINE__ t__gshared dot subsub addadd bang lpar lcurl rcurl semi dollar at and sub add star tilde string_ char_lit num id eof}
